<a:Api>
    <Copyright>
        Copyright 1996-2008 Ariba, Inc.

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
            http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

        $Id: //ariba/platform/ui/widgets/ariba/ui/validation/GenericChooser.awl#6 $
    </Copyright>

    <Overview>
        Renders some form of chooser control (Popup, Radio Buttons, Checkboxes, Chooser).
        The type of chooser may be determined dynamically based on the number of items
        in the choice list, or can be specified explicitly via the "type" binding.
    </Overview>

    <Binding key="object" type="Object" direction="get">
        The object being assigned to.  Defaults to the curent component instance.
    </Binding>

    <Binding key="key" type="Object" direction="get">
        The object key(path) being assigned to.
    </Binding>

    <Binding key="list" type="AWOrderedList" direction="get">
        List of choice objects assignable to the key of the object.
    </Binding>

    <Binding key="destinationClass" type="String" direction="get">
        Can be used in place of "list" to trigger obtaining the list
        of choices by was of the ChoiceSource class extension.
    </Binding>

    <Binding key="choiceProviderParams" type="Map" direction="get">
        See ChoiceSourceRegistry...
        (Optional) map of params for the provider.
    </Binding>

    <Binding key="multiSelect" type="boolean" direction="get" default="$false">
        Is this a List property, or a to-one.
    </Binding>

    <Binding key="type" type="String" direction="get">
        The style of chooser to use (Radio, Checkbox, Popup, PopupControl, Chooser)
        Defaults based on cardinality of the list and whether it's multiSelect.
    </Binding>

    <Binding key="displayKey" type="String" direction="get">
        The key(path) of the choice objects to get the property to display (uses choice
        object directly if null).
    </Binding>

    <Binding key="action" type="AWResponseGenerating" required="$false" direction="get">
        The action invoked when a popup menu item is changed.
        Note that action="$null" is different from no action binding at all.  If you have
        action="$null", it will submit the form and cycle the page upon change to the popup,
        while no action at all makes the popup passive (ie. user must click a button to submt the form).
    </Binding>

    <Binding key="noSelectionString" type="String" direction="get" required="$false">
        TBD
    </Binding>

    <Binding key="isRefresh" type="boolean" default="$false" direction="get">
        Convenience binding that is the same as action="$null".  See action binding
        for more information on action="$null".
    </Binding>

    <Binding key="disabled" type="boolean" default="$false" direction="get">
        Disables the popup menu if true.
    </Binding>

    <Binding key="size" type="int" default="$null" direction="get">
        TBD
    </Binding>

    <Binding key="allowFullMatchOnInput" type="boolean" default="$true" direction="get" >
        Should we attempt a match as they type (against the full list)
    </Binding>

</a:Api>\
<a:If isEqual="$type.name" value="Checkbox">
    <w:CheckboxList list="$list" item="$item" selections="$selection">\
        <a:String value="$displayValue" formatter="$formatter"/>\
        <br/>\
    </w:CheckboxList>
<a:Else isEqual="$type.name" value="Radio"/>
    <w:RadioButtonList list="$list" item="$item" selection="$selection"
             isRefresh="$^isRefresh">\
        <a:String value="$displayValue" formatter="$formatter"/>\
        <br/>\
    </w:RadioButtonList>
<a:Else isEqual="$type.name" value="Popup"/>
    <a:Popup list="$list" item="$item" selection="$selection"
             action="$^action" isRefresh="$^isRefresh" disabled="$^disabled" size="$^size"
             noSelectionString="$^noSelectionString:$[a001](no selection)">\
        <a:String value="$displayValue" formatter="$formatter"/>\
    </a:Popup>
<a:Else isEqual="$type.name" value="PopupControl"/>
    <w:PopupControl list="$list" item="$item" selection="$selection"
             action="$^action" disabled="$^disabled" size="$^size"
             noSelectionString="$^noSelectionString:$[a002](no selection)">\
        <a:String value="$displayValue" formatter="$formatter"/>\
    </w:PopupControl>
<a:Else isEqual="$type.name" value="Chooser"/>
    <w:Chooser selectionSource="$chooserSource" state="$chooserState" formatter="$chooserFormatter"
               multiSelect="$isMulti" disabled="$^disabled" size="$^size"
               selection="$selectedObjects"
               noSelectionString="$^noSelectionString:$[a003](no selection)"
               allowFullMatchOnInput="$^allowFullMatchOnInput:true"/>\
</a:If>