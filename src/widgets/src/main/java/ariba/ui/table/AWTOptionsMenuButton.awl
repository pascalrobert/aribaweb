<a:Api>
    <Copyright>
        Copyright 1996-2008 Ariba, Inc.

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
            http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

        $Id: //ariba/platform/ui/widgets/ariba/ui/table/AWTOptionsMenuButton.awl#22 $
    </Copyright>

    <Overview>
        Typically generated by the AWTDataTable unless the AWTHeadingArea is explicitly
        overridden.  In this case, the AWTOptionsMenuButton should be used to
        generate the option menu button (and optionally the default option menu items).

        If the menuId binding is not defined, then the AWTOptionsMenuButton will
        automatically include the default AWTOptionMenuItems.

                <t:HeadingArea>
                    <w:SectionHeading title="Title">
                        <t:OptionsMenuButton showOutlineExpansion="$false"/>
                    </w:SectionHeading>
                </t:HeadingArea>

        Alternatively, the menuId binding can be defined to provide an customized
        popup menu.

                <t:HeadingArea>
                    <w:SectionHeading title="Title">
                        <t:OptionsMenuButton menuId="myMenu"/>
                    </w:SectionHeading>
                    <w:PopupMenu menuId="myMenu">
                        <w:PopupMenuItem action="$action">Custom menu item</w:PopupMenuItem>
                        <t:OptionsMenuItems/>\
                    </w:PopupMenu>
                </t:HeadingArea>

        This is where the minimize/maximize button is rendered. 
    </Overview>

    <Binding key="showHideColumns" direction="get" type="boolean" default="$true">
        See AWTOptionsMenuItems
    </Binding>

    <Binding key="showOutlineExpansion" direction="get" type="boolean" default="$true">
        See AWTOptionsMenuItems
    </Binding>

    <Binding key="showGroupBy" direction="get" type="boolean" default="$true">
        See AWTOptionsMenuItems
    </Binding>

    <Binding key="showExcelExport" direction="get" type="boolean" default="$true">
        See AWTOptionsMenuItems
    </Binding>

    <Binding key="showPivotOptions" direction="get" type="boolean" default="$true">
        See AWTOptionsMenuItems
    </Binding>

    <Binding key="showHideDetails" direction="get" type="boolean" default="$true">
        See AWTOptionsMenuItems
    </Binding>

    <Binding key="showConfigureLayout" direction="get" type="boolean" default="$true">
        See AWTOptionsMenuItems
    </Binding>

    <Binding key="menuId" direction="get" type="boolean" required="$false">
        Use to explicitly associate the AWTOptionsMenuButton with a PopupMenu.  If this
        binding is declared, then the AWTOptionsMenuButton will not automatically generate
        a PopupMenu and the containing componenent is expected to define a PopupMenu with
        a corresponding menuId.
    </Binding>
</a:Api>\

<!--- Notes on Minimize/Maximize functionality:
        This works with Datatable.js for the implementation.
        See also AWTScrollTableWrapper for an important call to ariba.Datatable.updateScrollTable().-->
<a:MethodInvocation invoke="$computeMenuId"/>\
<table cellspacing="0" cellpadding="0">
    <tr>
        <td style="padding-right:5px" nowrap>
            <w:PopupMenuLink menuId="$menuId" position="this">\
                <a:Image title="$[a001]Table Options Menu" filename="anxTableOptions.gif"/>\
                <a:IncludeContent/>\
            </w:PopupMenuLink>\
        </td>
        <td class="awtMMNone" title="$[a002]Minimize / Maximize table">\
            &nbsp;\
        </td>
    </tr>
</table>
<a:If ifTrue="$generateMenu">\
    <w:PopupMenu menuId="$menuId">\
        <t:OptionsMenuItems showHideColumns="$^showHideColumns:$true"
                             showGroupBy="$^showGroupBy:$true"
                             showOutlineExpansion="$^showOutlineExpansion:$true"
                             showExcelExport="$^showExcelExport:$true"
                             showPivotOptions="$^showPivotOptions"
                             showHideDetails="$^showHideDetails"
                             showConfigureLayout="$^showConfigureLayout"/>\
    </w:PopupMenu>\
</a:If>\
